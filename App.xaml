<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp2"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:chart="http://schemas.syncfusion.com/wpf"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="WpfApp2.App"
             StartupUri="MainWindow.xaml">


    <Application.Resources>

        <FontFamily x:Key="MainFont">Futuris Cyrillic</FontFamily>


        <Brush x:Key="Gray26">#262626</Brush>
        <Brush x:Key="Gray36">#363636</Brush>
        <Brush x:Key="Gray46">#454545</Brush>
        <Brush x:Key="Gray86">#868686</Brush>
        <Brush x:Key="GrayEA">#eaeaea</Brush>

        <DataTemplate x:Key="LabelTemplate2">
            <TextBlock ClipToBounds="False" Text="{Binding Item.Name}"
FontSize="12" FontFamily="{StaticResource MainFont}" Foreground="{StaticResource Gray26}"
HorizontalAlignment="Center" VerticalAlignment="Center" />
        </DataTemplate>


        
        
        <Style x:Key="StyleTableHeader">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <Setter Property="FrameworkElement.Margin" Value="6 -6 0 -2" />
            <!--<Setter Property="Control.Background" Value="#454545"/>-->
        </Style>
        <Style x:Key="StyleDSeries" TargetType="{x:Type chart:ChartSeries}" >
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="Stroke" Value="{StaticResource Gray26}"/>
            <Setter Property="Palette" Value="Custom"/>
            <Setter Property="EnableAnimation" Value="True"/>
        </Style>
        <Style x:Key="StyleMainMenuItem">
            <Setter Property="Control.Foreground" Value="{StaticResource GrayEA}"/>
            <Setter Property="Control.Background" Value="{StaticResource Gray46}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Gray26}"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <!--<Setter Property="Control.HorizontalContentAlignment" Value="Center"/>-->
            <Setter Property="FrameworkElement.MinWidth" Value="150"/>
            <Setter Property="Control.Padding" Value="10,0"/>
            <Setter Property="MenuItem.IsCheckable" Value="True"/>
            <Setter Property="Control.Template" Value="{DynamicResource MenuItemControlTemplate1}"/>
            <Setter Property="FrameworkElement.Height" Value="27"/>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" 
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Gray36}" BorderThickness="1" Background="{StaticResource Gray26}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="yellow"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="red"/>-->
                    <Setter Property="TextBlock.FontWeight" TargetName="templateRoot" Value="Bold"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="StyleWindowHeader">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <Setter Property="FrameworkElement.Margin" Value="8,4" />
            <Setter Property="DockPanel.Dock" Value="Top"/>
        </Style>

        <Style x:Key="StyleInput">
            <Setter Property="Control.Foreground" Value="#ffffff"/>
            <Setter Property="Control.Background" Value="#454545"/>
            <Setter Property="Control.BorderBrush" Value="#262626"/>
            <Setter Property="Control.FontFamily" Value="Futuris"/>
            <Setter Property="FrameworkElement.Height" Value="27"/>
        </Style>


        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0,12,0,0"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#262626"/>
            <Setter Property="FontFamily" Value="Futuris"/>
        </Style>
        <Style x:Key="StyleHeader46" >
            <Setter Property="Control.FontSize" Value="14"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="{StaticResource Gray46}"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StyleImageButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <!--<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Padding" Value="0"/>
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Padding" Value="3"/>
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="StyleColumnHeader86" >
            <Setter Property="Control.Padding" Value="5 3"/>
            <Setter Property="Control.Background" Value="{StaticResource Gray86}"/>
            <Setter Property="Control.Foreground" Value="{StaticResource Gray46}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Gray26}"/>
        </Style>
        <Style x:Key="StyleBorder86" >
            <Setter Property="Border.Padding" Value="8 3 8 8"/>
            <Setter Property="Control.Background" Value="{StaticResource Gray86}"/>
        </Style>
        <Style x:Key="StyleButton" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="#363636"/>
            <Setter Property="Foreground" Value="#eaeaea"/>
            <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        </Style>

        <Style x:Key="StyleCloseButton" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Content" >
                <Setter.Value>
                    <Path x:Name="optionMark" Data="F1 M1,0 L5,4 9,0 10,1 6,5 10,9 9,10 5,6 1,10 0,9 4,5 0,1 z" Fill="#868686" Margin="5" Stretch="None"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StyleOkButton" TargetType="{x:Type ButtonBase}" >
            <!--<Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>-->
            <Setter Property="Foreground" Value="{StaticResource Gray26}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#868686"/>
            <Setter Property="BorderBrush" Value="#262626"/>
            <Setter Property="Margin" Value="0,28,0,0"/>
            <Setter Property="Padding" Value="35,0"/>
            <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
        </Style>

        <Style x:Key="StyleLabel">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="#eaeaea"/>
            <!--<Setter Property="Control.Background" Value="#363636"/>-->
        </Style>

        <Style x:Key="StyleHeaderLabel">
            <Setter Property="Control.FontSize" Value="14"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="{StaticResource Gray86}"/>
            <Setter Property="Control.Background" Value="#363636"/>
            <Setter Property="Control.Padding" Value="3"/>
        </Style>

        <Style x:Key="StyleMainBorder">
            <Setter Property="Control.Background" Value="#454545"/>
            <Setter Property="Border.Padding" Value="8"/>
        </Style>

        <Style x:Key="StyleInnerBorder" >
            <Setter Property="Control.BorderBrush" Value="#262626"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Background" Value="#363636"/>
            <!--<Setter Property="Margin" Value="8"/>-->
            <!--<Setter Property="BorderThickness" Value="0"/>-->
        </Style>

        <Style x:Key="StyleStackHeader" >
            <Setter Property="Control.Background" Value="#454545"/>
            <!--<Setter Property="Control.Height" Value="40"/>-->
        </Style>

        <Style x:Key="StyleComment">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <!--<Setter Property="Control.Background" Value="#363636"/>-->
        </Style>

        <Style x:Key="StyleBackground">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Background" Value="#262626"/>
        </Style>

        <Style x:Key="StyleSplitter">
            <Setter Property="Control.Background" Value="#262626"/>
        </Style>

        <ControlTemplate x:Key="TemplateTab" TargetType="{x:Type TabItem}">
            <Border x:Name="MainBrd" ClipToBounds="True" >
                <Border x:Name="LeftBrd" BorderBrush="Transparent" Padding="10,0" Margin="2,0" ClipToBounds="True" BorderThickness="0,0,0,0">
                    <ContentControl   SnapsToDevicePixels="True" x:Name="LeftGrd" 
                            Width="{Binding Width, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            Height="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" 
                                          x:Name="Content"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" 
                                          Content="{TemplateBinding Header}" 
                                          ContentSource="Header" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          RecognizesAccessKey="True"/>
                    </ContentControl>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger  Property="IsSelected" Value="True">
                    <Setter TargetName="LeftGrd" Property="Foreground" Value="#c9c9c9"/>
                    <!--<Setter TargetName="LeftBrd" Property="BorderBrush" Value="White"/>-->
                    <!--<Setter TargetName="LeftBrd" Property="Background" Value="#7d7d7d"/>-->
                    <!--<Setter TargetName="MainBrd" Property="BorderThickness" Value="2 2 0 2"/>
                    <Setter TargetName="MainBrd" Property="BorderBrush" Value="Black"/>-->
                </Trigger>
                <!--<Trigger  Property="IsSelected" Value="False">
                    <Setter TargetName="LeftBrd" Property="Margin" Value="0 0 5 0"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="StyleTab">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <Setter Property="Control.Background" Value="#454545"/>
            <Setter Property="Control.Padding" Value="10,0"/>
            <Setter Property="Control.BorderBrush" Value="#262626"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template" Value="{StaticResource TemplateTab}"/>
        </Style>

        <Style x:Key="StyleTabControl">
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <Setter Property="Control.Background" Value="#FF4F4F4F"/>
            <Setter Property="Control.BorderThickness" Value="0"/>
            <!--<Setter Property="Control.BorderBrush" Value="Red"/>
            <Setter Property="TabControl.ItemTemplate" Value="{StaticResource TemplateTab}"/>-->
            <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource StyleTab}"/>
        </Style>

        <Style x:Key="StyleColumnHeader" TargetType="{x:Type DataGridColumnHeader}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Label BorderBrush="#262626" BorderThickness="0,0,1,1" Style="{StaticResource StyleComment}" Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StyleRowHeader" TargetType="{x:Type DataGridRowHeader}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Label BorderBrush="#262626" Style="{StaticResource StyleComment}" Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StyleCell" TargetType="{x:Type DataGridCell}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Label BorderBrush="#262626" Style="{StaticResource StyleComment}" Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StyleTable">
            <Setter Property="DataGrid.RowHeight" Value="24"/>
            <Setter Property="DataGrid.RowBackground" Value="#363636"/>
            <Setter Property="Control.BorderBrush" Value="#262626"/>
            <Setter Property="Control.BorderThickness" Value="1 1"/>
            <Setter Property="DataGrid.RowHeaderWidth" Value="0"/>
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.Foreground" Value="#7d7d7d"/>
            <Setter Property="Control.Background" Value="#363636"/>
            <Setter Property="DataGrid.ColumnHeaderStyle" Value="{StaticResource StyleColumnHeader}"/>
            <Setter Property="DataGrid.HorizontalGridLinesBrush" Value="#262626"/>
            <Setter Property="DataGrid.VerticalGridLinesBrush" Value="#262626"/>

            <!--<Setter Property="DataGrid.CellStyle" Value="{StaticResource StyleCell}"/>-->
            <!--<Setter Property="DataGrid.RowHeaderStyle" Value="{StaticResource StyleRowHeader}"/>-->
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Gray46}"/>
                    <Setter Property="Foreground" Value="{DynamicResource Gray26}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource Gray46}"/>
                    <Setter Property="Foreground" Value="{DynamicResource Gray26}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StyleChartTitle" >
            <Setter Property="FrameworkElement.Margin" Value="10"/>
            <Setter Property="Control.Foreground" Value="{StaticResource Gray86}"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
        </Style>
        <Style x:Key="StyleInfoBorder" >
            <Setter Property="Control.Foreground" Value="#363636"/>
            <Setter Property="Control.Background" Value="#868686"/>
            <Setter Property="Control.Padding" Value="0 10"/>
        </Style>
        <Style x:Key="StyleInfoTitle" >
            <Setter Property="FrameworkElement.Height" Value="25"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
            <Setter Property="Control.Foreground" Value="#eaeaea"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
        </Style>
        <Style x:Key="StyleRadioTitle" >
            <Setter Property="FrameworkElement.Margin" Value="10 15"/>
            <Setter Property="Control.Foreground" Value="#eaeaea"/>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
        </Style>
        <Style x:Key="StyleRadio" >
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="FrameworkElement.Margin" Value="10 5"/>
            <Setter Property="Control.Foreground" Value="#eaeaea"/>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
        </Style>
        <Style x:Key="StyleInfoText" >
            <Setter Property="FrameworkElement.Margin" Value="10 5"/>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource MainFont}"/>
        </Style>




        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="0">
                            <Polygon Fill="#868686" Points="3,15 13,15 8,3"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="0">
                            <Polygon Fill="#868686" Points="3,3 8,15 13,3"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="2,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="#868686" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="2"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="2"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                              Style="{StaticResource ScrollBarLineButtonStyle}"
                              Command="ScrollBar.LineUpCommand" />
                <Track x:Name="PART_Track" Grid.Row="1" 
                       IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                              Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                              Command="ScrollBar.LineDownCommand"/>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>


        <ControlTemplate x:Key="TemplateCheckBox" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <!--<Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#FF212121" Margin="1" Opacity="0" Stretch="None"/>-->
                        <Path x:Name="optionMark" Data="F1 M1,0 L5,4 9,0 10,1 6,5 10,9 9,10 5,6 1,10 0,9 4,5 0,1 z" Fill="#868686" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="StyleCalendarButton" >
            <Setter Property="Control.Background" Value="{StaticResource Gray26}" />
            <Setter Property="Control.Foreground" Value="{StaticResource Gray86}" />
            <Setter Property="FrameworkElement.Height" Value="25" />
            <Setter Property="FrameworkElement.Width" Value="43" />
            <Setter Property="Control.BorderBrush" Value="Transparent" />
            <Setter Property="FrameworkElement.Margin" Value="5,0" />
        </Style>

        <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}" >
            <Setter Property="Background" Value="{StaticResource Gray36}" />
            <Setter Property="Foreground" Value="{StaticResource Gray86}" />
            <Setter Property="Width" Value="40" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="10,0" />
        </Style>

        <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Foreground" Value="{DynamicResource GrayEA}"/>
            <Setter Property="Background" Value="{DynamicResource Gray36}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Gray86}"/>
            <Setter Property="FontFamily" Value="{DynamicResource MainFont}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{DynamicResource CalendarItemStyle}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                <TextBlock Foreground="{DynamicResource GrayEA}" FontWeight="Normal" FontSize="9.5" FontFamily="{StaticResource MainFont}" HorizontalAlignment="Center" Margin="0,6,0,6" Text="{Binding}" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1">
                                <Border BorderBrush="{DynamicResource Gray86}" BorderThickness="1" CornerRadius="0">
                                    <Grid >
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand" >
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" Opacity="0" Stretch="Fill"/>
                                                    <Grid>
                                                        <Path x:Name="path" Data="M288.75,232.25 L288.75,240.625 L283,236.625 z" Fill="#FF333333" HorizontalAlignment="Left" Height="10" Margin="14,-6,0,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" Opacity="0" Stretch="Fill"/>
                                                    <Grid>
                                                        <Path x:Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z" Fill="#FF333333" HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand" >
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,4,1,9" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Fill="{StaticResource Gray86}" Grid.ColumnSpan="3" />
                                        <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="28"/>
                                        <Button x:Name="PART_HeaderButton" Grid.Column="1" Focusable="False" FontSize="12" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center"/>
                                        <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="28"/>
                                        <Grid x:Name="PART_MonthView"  Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                        <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-3,7,6" Grid.Row="1" Visibility="Hidden">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Border>
                            <Rectangle x:Name="PART_DisabledVisual"  Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                            <DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="RegularDay"/>
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
                                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BlackoutDayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NormalDay"/>
                                    <VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Blackout"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground" Fill="{StaticResource Gray46}" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Border x:Name="SelectedBackground" Opacity="0" BorderThickness="1" BorderBrush="{StaticResource GrayEA}" CornerRadius="15" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="HighlightBackground" Fill="{StaticResource Gray86}" Opacity="0" />
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource Gray86}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" Fill="#FF000000" HorizontalAlignment="Stretch" Margin="3" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
                            <Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false"  Visibility="Collapsed"/>
                            <!--RadiusY="1" RadiusX="1" Stroke="#FF45D6FA"-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--<Style x:Key="StyleConnector" >
            <Setter Property="Line.Width" Value="5"/>
            <Setter Property="Line.Fill" Value="{StaticResource Gray86}"/>
        </Style>-->

        <Style TargetType="{x:Type Path}" x:Key="StyleLine">
            <!--<Setter Property="StrokeDashArray" Value="10,7,5"/>-->
            <Setter Property="Stroke" Value="{StaticResource Gray86}"/>
            <Setter Property="ClipToBounds" Value="False"/>
            <!--<Setter Property="Width" Value="5"/>-->
        </Style>

        <Style TargetType="{x:Type Line}" x:Key="StyleLine2">
            <!--<Setter Property="StrokeDashArray" Value="10,7,5"/>-->
            <Setter Property="Stroke" Value="{StaticResource Gray86}"/>
            <Setter Property="ClipToBounds" Value="False"/>
            <!--<Setter Property="Width" Value="5"/>-->
        </Style>

        <!--<SelectedItemToDataItemConverter x:Key="labelconverter" />Foreground="{Binding ChartColorModel.CustomBrushes[0]}"
          Text="{Binding Converter={StaticResource labelconverter}}"  Text="{TemplateBinding chart:ChartSeries.ColorModel}"-->
        <DataTemplate x:Key="LabelTemplate">
            <TextBlock ClipToBounds="False" Text="{Binding Item.Name}"
                       FontSize="12" FontFamily="{StaticResource MainFont}" Foreground="{StaticResource Gray86}"
                       HorizontalAlignment="Center" VerticalAlignment="Top" />
        </DataTemplate>

        <SolidColorBrush x:Key="Menu.Static.Background" Color="#262626"/>
        <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Gray26}"/>
            <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{StaticResource Gray86}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
               RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Gray36}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Gray86}"/>
                    <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>-->
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Gray26}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GrayEA}"/>
                    <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
                </Trigger>
                <!--<Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>-->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Gray46}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Gray26}"/>
                    <!--<Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="ComboBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   SnapsToDevicePixels="true" Margin="4,4,21,4"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        

        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Background" Value="{StaticResource Gray36}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF2B2B2B"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Gray26}"/>
                                <Setter Property="Foreground" Value ="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                             RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" 
                                             RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="true">
                            
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            
                        </Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RepeatButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Button.Content}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--<Style TargetType="{x:Type Border}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>-->

    </Application.Resources>
</Application>
